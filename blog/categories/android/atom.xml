<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：android | Jason's Blog]]></title>
  <link href="http://jason5.cn/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://jason5.cn/"/>
  <updated>2016-07-21T19:34:08+08:00</updated>
  <id>http://jason5.cn/</id>
  <author>
    <name><![CDATA[jason]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[greenDAO使用入门]]></title>
    <link href="http://jason5.cn/blog/greendaoshi-yong-ru-men.html"/>
    <updated>2015-07-26T11:25:29+08:00</updated>
    <id>http://jason5.cn/blog/greendaoshi-yong-ru-men</id>
    <content type="html"><![CDATA[<p>ORM（Object Relational Mapping）可以帮我们减轻开发工作量，提高工作效率。之前做Java Web项目用过Hibernate，现在想在Android项目中用一下ORM。</p>

<p>之前上网查了一下目前主流的Android ORM，有如下几种：<br/>
* ORMLite<br/>
* SugarORM<br/>
* GreenDAO<br/>
* Active Android<br/>
* Realm</p>

<p>当这些库都没有用过的时候，如何进行技术选型呢，我用了个很简单的办法，看下Github上的star数就好了，greenDAO是其中最多的，并且初步横向比较了下，greenDAO的性能不错，下边是网上一张greeDAO和ORMLite的性能对比图</p>

<p><img src="http://i3.tietuku.com/b07d9bec3ea47b7d.png" alt="" /></p>

<p>greenDAO的使用比较简单，下边就开始介绍下如何使用greenDAO吧。</p>

<!--more-->


<h2>1. DAOGenerator工程和Android App工程</h2>

<p><img src="http://i3.tietuku.com/4e32221ef721f18c.png" alt="" /></p>

<p>上边这张图说明了greenDAO的作用，greenDAO用来帮助我们的工程生成Java Objects和访问数据库的DAO类，其中Java Objects中的属性字段和SQLite Database里的表的列属性一一对应。生成Java Objects和DAO类后，应用程序Android App可以通过使用DAO类来进行增删查改的数据库操作，操作方法全都是基于Java Objects的，不用写sql语句。</p>

<p>这里涉及了两个工程，DAOGenerator工程和Android App工程。前者用于生成Java Objects和DAO类，后者是开发者的应用工程，使用前者生成的类。</p>

<p>下边就以我做的项目来举例，两个工程的目录结构如下所示</p>

<p>|&ndash;PmdCampus<br/>
&nbsp;&nbsp;&nbsp;&nbsp;|&ndash;src  <br/>
&nbsp;&nbsp;&nbsp;&nbsp;|&ndash;src-gen        <br/>
|&ndash;PmdCampusDAOGenerator</p>

<p>PmdCampusDAOGenerator是生成DAO类的独立Java工程，PmdCampus是应用开发者的Android App工程。</p>

<p>如果是用gradle来编译的话，PmdCampusDAOGenerator工程的build.gradle文件如下
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">java</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">application</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="nf">fileTree</span><span class="o">(</span><span class="nl">dir:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">libs</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;,</span> <span class="nl">include:</span> <span class="o">[&amp;</span><span class="n">lsquo</span><span class="o">;*.</span><span class="na">jar</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;])</span>
</span><span class='line'>    <span class="n">compile</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">de</span><span class="o">.</span><span class="na">greenrobot</span><span class="o">:</span><span class="n">greendao</span><span class="o">-</span><span class="nl">generator:</span><span class="mf">1.3</span><span class="o">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="err">``</span>
</span><span class='line'><span class="n">其中</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="n">compile</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">de</span><span class="o">.</span><span class="na">greenrobot</span><span class="o">:</span><span class="n">greendao</span><span class="o">-</span><span class="nl">generator:</span><span class="mf">1.3</span><span class="o">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;</span><span class="err">`</span><span class="n">这行是引入greenDAO的库</span><span class="err">。</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">再来看下PmdCampus工程的build</span><span class="o">.</span><span class="na">gradle</span><span class="err">，</span><span class="n">由于太多其它内容</span><span class="err">，</span><span class="n">这里只贴出关键的部分</span><span class="err">。</span><span class="n">需要引入以下库</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">java</span>
</span><span class='line'><span class="n">compile</span> <span class="err">&#39;</span><span class="n">de</span><span class="o">.</span><span class="na">greenrobot</span><span class="o">:</span><span class="nl">greendao:</span><span class="mf">1.3</span><span class="o">.</span><span class="mi">7</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">大家注意PmdCampus下除了常规的src目录外</span><span class="err">，</span><span class="n">还有一个手工创建的src</span><span class="o">-</span><span class="n">gen目录</span><span class="err">，</span><span class="n">这个目录就是存放PmdCampusDAOGenerator工程生成的Java</span> <span class="n">Objects和DAO类的</span><span class="err">。</span><span class="n">所以</span><span class="err">，</span><span class="n">PmdCampus的build</span><span class="o">.</span><span class="na">gradle文件配置一下</span><span class="err">，</span><span class="n">编译src</span><span class="o">-</span><span class="n">gen里的java文件</span><span class="err">，</span><span class="n">需要加入以下的配置</span><span class="err">：</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">java</span>
</span><span class='line'><span class="n">sourceSets</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">main</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">java</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">srcDir</span> <span class="err">&#39;</span><span class="n">src</span><span class="err">&#39;</span>
</span><span class='line'>            <span class="n">srcDir</span> <span class="err">&#39;</span><span class="n">src</span><span class="o">-</span><span class="n">gen</span><span class="err">&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">.</span> <span class="n">在DAOGenerate工程创建DAOGenerator类</span><span class="o">&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">DAOGenerate工程是一个普通的Java工程</span><span class="err">，</span><span class="n">DAOGenerator类是用来生成DAO文件的类</span><span class="err">，</span><span class="n">有main函数入口</span><span class="err">，</span><span class="n">直接从main函数运行就可以了</span><span class="err">。</span><span class="n">DAOGenerator类的代码如下</span><span class="err">：</span>
</span></code></pre></td></tr></table></div></figure>java
package com.example;</p>

<p>import de.greenrobot.daogenerator.DaoGenerator;
import de.greenrobot.daogenerator.Entity;
import de.greenrobot.daogenerator.Schema;</p>

<p>public class DAOGenerator {
    public static void main(String args[]) throws Exception {
        Schema schema = new Schema(1, &ldquo;com.tencent.PmdCampus.module.message.dao&rdquo;);
        addChat(schema);
        new DaoGenerator().generateAll(schema, &ldquo;./PmdCampus/src-gen&rdquo;);
    }</p>

<pre><code>private static void addChat(Schema schema){
    Entity chat = schema.addEntity("Chat");
</code></pre>

<p>//        chat.setTableName(&ldquo;ChatAnotherTableName&rdquo;);        //可以设置sqlite中的table name，默认跟Entity的名字相同
        chat.addIdProperty().primaryKey().autoincrement();  // 消息唯一ID
        chat.addIntProperty(&ldquo;conversationId&rdquo;).notNull();   // 聊天会话ID
        chat.addIntProperty(&ldquo;type&rdquo;).notNull();              // 消息类型，1文字，2图片
        chat.addStringProperty(&ldquo;senderId&rdquo;).notNull();        // 发送人唯一标识
        chat.addStringProperty(&ldquo;receiverId&rdquo;).notNull();      // 接收人唯一标识
        chat.addStringProperty(&ldquo;content&rdquo;).notNull();        // 消息内容，1文字内容，2图片url
        chat.addLongProperty(&ldquo;send_time&rdquo;).notNull();        // 消息发送的时间
        chat.addIntProperty(&ldquo;status&rdquo;).notNull();            // 消息是否发送成功（0表示成功或已读， 1表示失败, 2表示正在发送, 3表示未读）
        chat.addLongProperty(&ldquo;seq&rdquo;).notNull();              // 服务端有序的序号
    }
}</p>

<pre><code>在main方法中
</code></pre>

<p>Schema schema = new Schema(1, &ldquo;com.tencent.PmdCampus.module.message.dao&rdquo;);
<code>
该方法第一个参数用来更新数据库版本号，第二个参数为要生成的DAO类所在包路径。
</code>java
addChat(schema);
new DaoGenerator().generateAll(schema, &ldquo;./PmdCampus/src-gen&rdquo;);
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">进行建表和设置要生成DAO文件的目标工程的项目路径</span><span class="err">。</span><span class="n">addChat方法里定义了Chat对象的属性</span><span class="err">，</span><span class="n">数据库中的字段也会一一对应</span><span class="err">。</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">之后运行main函数</span><span class="err">，</span><span class="n">就会在PmdCampus</span><span class="o">/</span><span class="n">src</span><span class="o">-</span><span class="n">gen目录下生成Java</span> <span class="n">Objects和DAO类了</span><span class="err">。</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">img</span> <span class="n">src</span><span class="o">=</span><span class="s">&quot;http://i3.tietuku.com/d85c5423440290ca.png&quot;</span> <span class="n">alt</span><span class="o">=</span><span class="s">&quot;&quot;</span> <span class="o">/&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">.</span> <span class="n">在Android</span> <span class="n">App工程里创建DBHelper类</span><span class="o">&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">生成了DAO类之后</span><span class="err">，</span><span class="n">在自己的Android</span> <span class="n">App工程就可以使用了</span><span class="err">，</span><span class="n">为了更加方便</span><span class="err">，</span><span class="n">这里封装了一个DBHelper类</span><span class="err">，</span><span class="n">代码如下</span>
</span></code></pre></td></tr></table></div></figure>java
package com.tencent.PmdCampus.module.message.storage.db;</p>

<p>import android.content.Context;
import android.util.Log;</p>

<p>import com.tencent.PmdCampus.module.message.dao.Chat;
import com.tencent.PmdCampus.module.message.dao.ChatDao;
import com.tencent.PmdCampus.module.message.dao.DaoMaster;
import com.tencent.PmdCampus.module.message.dao.DaoSession;</p>

<p>import java.util.List;</p>

<p>import de.greenrobot.dao.query.DeleteQuery;
import de.greenrobot.dao.query.QueryBuilder;</p>

<p>/<em>*
 * Created by junshao on 15/7/26.
 </em>/
public class ChatDBHelper {
    private static Context mContext;
    private static ChatDBHelper instance;</p>

<pre><code>private static ChatDao chatDao;

public static ChatDBHelper getInstance(Context context)
{
    if (instance == null)
    {
        instance = new ChatDBHelper();
        if (mContext == null)
        {
            mContext = context;
        }

        DaoMaster.OpenHelper helper = new DaoMaster.DevOpenHelper(context, "message.db", null);
        DaoMaster daoMaster = new DaoMaster(helper.getWritableDatabase());
        DaoSession daoSession = daoMaster.newSession();
        chatDao = daoSession.getChatDao();
    }
    return instance;
}

public void insertChat(Chat chat){
    chatDao.insert(chat);
}

public void delChat(long id){
    chatDao.deleteByKey(id);
}

public void delAllChat(){
    chatDao.deleteAll();
}

public List&lt;Chat&gt; queryChatList(long seq){
    QueryBuilder qb = chatDao.queryBuilder();
    qb.where(ChatDao.Properties.Seq.le(seq));
    qb.orderDesc(ChatDao.Properties.Seq);
    return qb.list();
}
</code></pre>

<p>}</p>

<pre><code>
ChatDBHelper是一个单例，主要负责初始化ChatDao对象，然后利用ChatDao就可以用操作对象的方式直接操作DB了。queryChatList里用到了QueryBuilder，QueryBuilder可以设置诸多属性，这里用到了where和orderDesc，相当于对应的sql语句。关于API更多的使用说明可以参考[greenDAO官方网站](http://greendao-orm.com/)。

##4. 在业务逻辑里使用DBHelper类
现在可以愉快方便的使用DBHelpler类了，生成一个Chat对象并插入，然后查询的代码如下:
</code></pre>

<p>ChatDBHelper chatDBHelper = ChatDBHelper.getInstance(this);
Chat chat = new Chat();
chat.setConversationId(0);
chat.setType(0);
chat.setSenderId(&ldquo;111&rdquo;);
chat.setReceiverId(&ldquo;111&rdquo;);
chat.setContent(&ldquo;content&rdquo;);
chat.setStatus(1);
chat.setSeq(111);
chatDBHelper.insertChat(chat);
List<Chat> chatList = chatDBHelper.queryChatList(111);
```</p>

<p>这篇文章只是简单的介绍了greenDAO的入门用法，更多高级内容请参考官方网站。</p>

<hr />

<p>参考资料：<br/>
*  <a href="http://greendao-orm.com/">greenDAO – Android ORM for SQLite</a> <br/>
*  <a href="http://glblong.blog.51cto.com/3058613/1354953">Android开源：数据库ORM框架GreenDao学习心得及使用总结</a></p>
]]></content>
  </entry>
  
</feed>
